{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "Comp-9",
  "type": "registry:component",
  "description": "Range Calendar with presets",
  "dependencies": [
    "@internationalized/date"
  ],
  "registryDependencies": [
    "button",
    "range-calendar"
  ],
  "files": [
    {
      "path": "registry/default/components/Comp-9.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport { ref, computed, type HTMLAttributes, type Ref } from \"vue\";\r\nimport { Button } from \"@/registry/default/ui/button\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport {\r\n   RangeCalendarRoot,\r\n   type RangeCalendarRootEmits,\r\n   type RangeCalendarRootProps,\r\n   useForwardPropsEmits,\r\n   ConfigProvider,\r\n} from \"reka-ui\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n   getLocalTimeZone,\r\n   today,\r\n   toCalendar,\r\n   createCalendar,\r\n   type CalendarDate,\r\n   startOfMonth,\r\n   endOfMonth,\r\n} from \"@internationalized/date\";\r\nimport type { DateRange } from \"reka-ui\";\r\nimport {\r\n   RangeCalendarCell,\r\n   RangeCalendarCellTrigger,\r\n   RangeCalendarGrid,\r\n   RangeCalendarGridBody,\r\n   RangeCalendarGridHead,\r\n   RangeCalendarGridRow,\r\n   RangeCalendarHeadCell,\r\n   RangeCalendarHeader,\r\n   RangeCalendarHeading,\r\n   RangeCalendarNextButton,\r\n   RangeCalendarPrevButton,\r\n} from \"@/registry/default/ui/range-calendar\";\r\n\r\nconst props = withDefaults(\r\n   defineProps<RangeCalendarRootProps & { class?: HTMLAttributes[\"class\"] }>(),\r\n   { locale: \"fa-IR\" },\r\n);\r\n\r\nconst emits = defineEmits<RangeCalendarRootEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n\r\nconst todayDate = toCalendar(\r\n   today(getLocalTimeZone()),\r\n   createCalendar(\"persian\"),\r\n);\r\n\r\nconst start = todayDate;\r\nconst end = start.add({ days: 7 });\r\n\r\nconst modelValue = ref({\r\n   start: props.modelValue?.start ? props.modelValue.start : start,\r\n   end: props.modelValue?.end ? props.modelValue.end : end,\r\n}) as Ref<DateRange>;\r\n\r\ntype Preset = {\r\n   label: string;\r\n   start: CalendarDate;\r\n   end: CalendarDate;\r\n};\r\n\r\nconst presets: Preset[] = [\r\n   {\r\n      label: \"هفته آینده\",\r\n      start: todayDate,\r\n      end: todayDate.add({ days: 7 }),\r\n   },\r\n   {\r\n      label: \"هفته گذشته\",\r\n      start: todayDate.subtract({ days: 7 }),\r\n      end: todayDate,\r\n   },\r\n   {\r\n      label: \"ماه آینده\",\r\n      start: todayDate,\r\n      end: todayDate.add({ months: 1 }),\r\n   },\r\n   {\r\n      label: \"ماه گذشته\",\r\n      start: todayDate.subtract({ months: 1 }),\r\n      end: todayDate,\r\n   },\r\n   {\r\n      label: \"از ابتدای ماه\",\r\n      start: startOfMonth(todayDate),\r\n      end: todayDate,\r\n   },\r\n   {\r\n      label: \"تا انتهای ماه\",\r\n      start: todayDate,\r\n      end: endOfMonth(todayDate),\r\n   },\r\n];\r\n\r\nfunction selectRange(preset: Preset) {\r\n   modelValue.value = { start: preset.start, end: preset.end };\r\n}\r\n\r\nconst dateString = computed(() => {\r\n   const startDate = modelValue.value.start?.toDate(getLocalTimeZone());\r\n   const endDate = modelValue.value.end?.toDate(getLocalTimeZone());\r\n\r\n   const startDate_day = startDate?.toLocaleString(\"fa-IR\", { day: \"numeric\" });\r\n   const startDate_month = startDate?.toLocaleString(\"fa-IR\", {\r\n      month: \"short\",\r\n   });\r\n   const endDate_day = endDate?.toLocaleString(\"fa-IR\", { day: \"numeric\" });\r\n   const endDate_month = endDate?.toLocaleString(\"fa-IR\", {\r\n      month: \"short\",\r\n   });\r\n\r\n   return `${startDate_day} ${startDate_month} - ${endDate_day} ${endDate_month}`;\r\n});\r\n</script>\r\n\r\n<template>\r\n   <ConfigProvider dir=\"rtl\">\r\n      <div\r\n         class=\"bg-background dir-rtl w-fit rounded-lg border border-neutral-300 p-3\"\r\n      >\r\n         <div class=\"flex gap-4 max-sm:flex-col\">\r\n            <div\r\n               class=\"relative flex flex-col justify-between max-sm:order-1 max-sm:border-t sm:w-32 sm:border-e sm:pe-2\"\r\n            >\r\n               <div class=\"mt-1 flex h-full flex-col sm:mt-0\">\r\n                  <Button\r\n                     v-for=\"preset in presets\"\r\n                     :key=\"preset.label\"\r\n                     size=\"sm\"\r\n                     class=\"w-full justify-start\"\r\n                     variant=\"ghost\"\r\n                     @click=\"selectRange(preset)\"\r\n                  >\r\n                     {{ preset.label }}\r\n                  </Button>\r\n               </div>\r\n               <div class=\"flex flex-col items-center justify-center\">\r\n                  <Separator class=\"mt-1 mb-2\" />\r\n\r\n                  <span class=\"text-muted-foreground text-xs\">{{\r\n                     dateString\r\n                  }}</span>\r\n               </div>\r\n            </div>\r\n            <RangeCalendarRoot\r\n               data-slot=\"range-calendar\"\r\n               v-slot=\"{ weekDays, grid }\"\r\n               :class=\"props.class\"\r\n               v-bind=\"forwarded\"\r\n               v-model=\"modelValue\"\r\n            >\r\n               <RangeCalendarHeader>\r\n                  <RangeCalendarHeading class=\"dir-ltr\" />\r\n                  <div class=\"flex items-center gap-1\">\r\n                     <RangeCalendarPrevButton class=\"calendar-prev-btn\" />\r\n                     <RangeCalendarNextButton class=\"calendar-next-btn\" />\r\n                  </div>\r\n               </RangeCalendarHeader>\r\n               <div\r\n                  class=\"mt-4 flex flex-col gap-y-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\"\r\n               >\r\n                  <RangeCalendarGrid\r\n                     v-for=\"month in grid\"\r\n                     :key=\"month.value.toString()\"\r\n                  >\r\n                     <RangeCalendarGridHead>\r\n                        <RangeCalendarGridRow>\r\n                           <RangeCalendarHeadCell\r\n                              v-for=\"day in weekDays\"\r\n                              :key=\"day\"\r\n                           >\r\n                              {{ day }}\r\n                           </RangeCalendarHeadCell>\r\n                        </RangeCalendarGridRow>\r\n                     </RangeCalendarGridHead>\r\n                     <RangeCalendarGridBody>\r\n                        <RangeCalendarGridRow\r\n                           v-for=\"(weekDates, index) in month.rows\"\r\n                           :key=\"`weekDate-${index}`\"\r\n                           class=\"mt-2 w-full\"\r\n                        >\r\n                           <RangeCalendarCell\r\n                              v-for=\"weekDate in weekDates\"\r\n                              :key=\"weekDate.toString()\"\r\n                              :date=\"weekDate\"\r\n                              :class=\"[\r\n                                 '[&:has([data-highlighted])]:bg-muted-foreground/30 [&:has([data-selected])]:bg-muted-foreground/30 first:[&:has([data-selected])]:rounded-l-none last:[&:has([data-selected])]:rounded-r-none',\r\n                                 // Start\r\n                                 '[&:has([data-highlighted][data-highlighted-start])]:rounded-s-md [&:has([data-selected][data-selection-start])]:rounded-s-md',\r\n                                 // End\r\n                                 '[&:has([data-highlighted][data-highlighted-end])]:rounded-e-md [&:has([data-selected][data-selection-end])]:rounded-e-md',\r\n                              ]\"\r\n                           >\r\n                              <RangeCalendarCellTrigger\r\n                                 :day=\"weekDate\"\r\n                                 :month=\"month.value\"\r\n                                 :class=\"[\r\n                                    'hover:bg-unset',\r\n                                    // Selection Start\r\n                                    'data-[highlighted-start]:bg-primary data-[highlighted-start]:text-primary-foreground data-[highlighted-start]:not-data-[highlighted-end]:rounded-e-none data-[selection-start]:not-data-[highlighted]:not-data-[selection-end]:rounded-e-none',\r\n                                    // Selection End\r\n                                    'data-[highlighted-end]:bg-primary data-[highlighted-end]:text-primary-foreground data-[highlighted-end]:not-data-[highlighted-start]:rounded-s-none data-[selection-end]:not-data-[selection-start]:rounded-s-none',\r\n                                    // Today\r\n                                    `[&[data-today]:not([data-selected])]:bg-unset [&[data-today]:not([data-selected])]:text-unset data-[today]:after:content-[' '] data-[today]:after:bg-primary data-[today]:data-[selection-start]:after:bg-primary-foreground data-[today]:data-[selection-end]:after:bg-primary-foreground data-[today]:data-[highlighted]:hover:after:bg-primary-foreground data-[today]:after:absolute data-[today]:after:bottom-[5px] data-[today]:after:h-[3px] data-[today]:after:w-[3px] data-[today]:after:rounded-full`,\r\n                                 ]\"\r\n                              />\r\n                           </RangeCalendarCell>\r\n                        </RangeCalendarGridRow>\r\n                     </RangeCalendarGridBody>\r\n                  </RangeCalendarGrid>\r\n               </div>\r\n            </RangeCalendarRoot>\r\n         </div>\r\n      </div>\r\n   </ConfigProvider>\r\n</template>\r\n<style scoped>\r\n.calendar-prev-btn {\r\n   left: unset !important;\r\n   right: 0;\r\n   rotate: 180deg;\r\n}\r\n\r\n.calendar-next-btn {\r\n   right: unset !important;\r\n   left: 0;\r\n   rotate: 180deg;\r\n}\r\n\r\n.dir-rtl {\r\n   direction: rtl;\r\n}\r\n\r\n.dir-ltr {\r\n   direction: ltr;\r\n}\r\n</style>\r\n",
      "type": "registry:component"
    }
  ],
  "meta": {
    "colSpan": 2
  }
}