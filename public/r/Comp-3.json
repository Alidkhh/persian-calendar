{
  "$schema": "https://shadcn-vue.com/schema/registry-item.json",
  "name": "Comp-3",
  "type": "registry:component",
  "description": "Disabled dates",
  "registryDependencies": [
    "button",
    "calendar"
  ],
  "files": [
    {
      "path": "registry/default/components/Comp-3.vue",
      "content": "<script lang=\"ts\" setup>\r\nimport type { HTMLAttributes } from \"vue\";\r\nimport { reactiveOmit } from \"@vueuse/core\";\r\nimport {\r\n   CalendarRoot,\r\n   type CalendarRootEmits,\r\n   type CalendarRootProps,\r\n   useForwardPropsEmits,\r\n   ConfigProvider,\r\n} from \"reka-ui\";\r\nimport { cn } from \"@/lib/utils\";\r\nimport {\r\n   CalendarCell,\r\n   CalendarCellTrigger,\r\n   CalendarGrid,\r\n   CalendarGridBody,\r\n   CalendarGridHead,\r\n   CalendarGridRow,\r\n   CalendarHeadCell,\r\n   CalendarHeader,\r\n   CalendarHeading,\r\n   CalendarNextButton,\r\n   CalendarPrevButton,\r\n} from \"@/registry/default/ui/calendar\";\r\nimport {\r\n   type DateValue,\r\n   createCalendar,\r\n   getLocalTimeZone,\r\n   toCalendar,\r\n   today,\r\n   CalendarDate,\r\n   PersianCalendar,\r\n   isWeekend,\r\n} from \"@internationalized/date\";\r\n\r\nconst props = withDefaults(\r\n   defineProps<\r\n      CalendarRootProps & {\r\n         class?: HTMLAttributes[\"class\"];\r\n         showFooter?: boolean;\r\n      }\r\n   >(),\r\n   {\r\n      locale: \"fa-IR\",\r\n      showFooter: true,\r\n   },\r\n);\r\n\r\nconst emits = defineEmits<CalendarRootEmits>();\r\n\r\nconst delegatedProps = reactiveOmit(props, \"class\");\r\n\r\nconst forwarded = useForwardPropsEmits(delegatedProps, emits);\r\n\r\nconst todayDate = toCalendar(\r\n   today(getLocalTimeZone()),\r\n   createCalendar(\"persian\"),\r\n);\r\n\r\nconst modelValue = ref(\r\n   props.modelValue ? props.modelValue : todayDate,\r\n) as Ref<DateValue>;\r\n\r\nconst selectedDate = ref({\r\n   year: todayDate.year,\r\n   month: todayDate.month,\r\n});\r\n\r\nconst placeholder = computed({\r\n   get: () =>\r\n      new CalendarDate(\r\n         new PersianCalendar(),\r\n         selectedDate.value.year,\r\n         selectedDate.value.month,\r\n         1,\r\n      ),\r\n   set: (newDate: DateValue) => {\r\n      selectedDate.value = {\r\n         year: newDate.year,\r\n         month: newDate.month,\r\n      };\r\n   },\r\n});\r\n\r\nconst isDateUnavailable = (date: DateValue) =>\r\n   isWeekend(date, \"fa\") || date.day === 17 || date.day === 18;\r\n</script>\r\n\r\n<template>\r\n   <ConfigProvider dir=\"rtl\">\r\n      <CalendarRoot\r\n         data-slot=\"calendar\"\r\n         v-slot=\"{ weekDays, grid }\"\r\n         :class=\"\r\n            cn(\r\n               'bg-background rounded-lg border border-neutral-300 p-3',\r\n               props.class,\r\n            )\r\n         \"\r\n         v-bind=\"forwarded\"\r\n         v-model=\"modelValue\"\r\n         :placeholder=\"placeholder\"\r\n         :isDateUnavailable=\"isDateUnavailable\"\r\n      >\r\n         <CalendarHeader>\r\n            <CalendarHeading class=\"dir-ltr\" />\r\n\r\n            <div class=\"flex items-center gap-1\">\r\n               <CalendarPrevButton class=\"calendar-prev-btn\" />\r\n               <CalendarNextButton class=\"calendar-next-btn\" />\r\n            </div>\r\n         </CalendarHeader>\r\n\r\n         <div\r\n            class=\"mt-4 flex flex-col gap-y-4 sm:flex-row sm:gap-x-4 sm:gap-y-0\"\r\n         >\r\n            <CalendarGrid v-for=\"month in grid\" :key=\"month.value.toString()\">\r\n               <CalendarGridHead>\r\n                  <CalendarGridRow>\r\n                     <CalendarHeadCell v-for=\"day in weekDays\" :key=\"day\">\r\n                        {{ day }}\r\n                     </CalendarHeadCell>\r\n                  </CalendarGridRow>\r\n               </CalendarGridHead>\r\n               <CalendarGridBody>\r\n                  <CalendarGridRow\r\n                     v-for=\"(weekDates, index) in month.rows\"\r\n                     :key=\"`weekDate-${index}`\"\r\n                     class=\"mt-2 w-full\"\r\n                  >\r\n                     <CalendarCell\r\n                        v-for=\"weekDate in weekDates\"\r\n                        :key=\"weekDate.toString()\"\r\n                        :date=\"weekDate\"\r\n                     >\r\n                        <CalendarCellTrigger\r\n                           :day=\"weekDate\"\r\n                           :month=\"month.value\"\r\n                           class=\"[&[data-today]:not([data-selected])]:bg-unset [&[data-today]:not([data-selected])]:text-unset data-[today]:after:content-[' '] data-[today]:after:bg-primary data-[today]:data-[selected]:after:bg-primary-foreground data-[today]:after:absolute data-[today]:after:bottom-[5px] data-[today]:after:h-[3px] data-[today]:after:w-[3px] data-[today]:after:rounded-full\"\r\n                        />\r\n                     </CalendarCell>\r\n                  </CalendarGridRow>\r\n               </CalendarGridBody>\r\n            </CalendarGrid>\r\n         </div>\r\n      </CalendarRoot>\r\n   </ConfigProvider>\r\n</template>\r\n<style scoped>\r\n.calendar-prev-btn {\r\n   left: unset !important;\r\n   right: 0;\r\n   rotate: 180deg;\r\n}\r\n\r\n.calendar-next-btn {\r\n   right: unset !important;\r\n   left: 0;\r\n   rotate: 180deg;\r\n}\r\n.dir-rtl {\r\n   direction: rtl;\r\n}\r\n\r\n.dir-ltr {\r\n   direction: ltr;\r\n}\r\n</style>\r\n",
      "type": "registry:component"
    }
  ]
}